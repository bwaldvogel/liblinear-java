apply plugin: 'idea'
apply plugin: 'java-library'

apply plugin: 'maven'
apply plugin: 'signing'

archivesBaseName = "liblinear"
group = "com.jeffreypasternack"
version = '2.21'

sourceCompatibility = 1.7
targetCompatibility = 1.7

compileJava.options.encoding = 'UTF-8'

ext {
    title = 'liblinear'
    description = 'Java port of Liblinear with Multithreaded Training'
    url = 'https://github.com/jeffpasternack/liblinear-java'
}

jar {
    manifest {
        attributes 'Implementation-Title': title, 'Implementation-Version': version
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

ext {
    junitVersion = '4.12'
    assertjVersion = '2.9.1'
    powermockVersion = '1.6.5'
    equalsverifierVersion = '2.5.2'
}

repositories {
    mavenCentral()
}

wrapper {
    gradleVersion = "4.10.2"
    distributionType = Wrapper.DistributionType.ALL
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: junitVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: assertjVersion
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: powermockVersion
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: powermockVersion
    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: equalsverifierVersion
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            pom.project {
                name 'liblinear'
                packaging 'jar'

                description 'Java port of Liblinear with Multithreaded Training'
                url 'https://github.com/jeffpasternack/liblinear-java'

                scm {
                    connection 'scm:git@github.com:jeffreypasternack/liblinear-java.git'
                    developerConnection 'scm:git@github.com:jeffreypasternack/liblinear-java.git'
                    url 'scm:git@github.com:jeffreypasternack/liblinear-java.git'
                }

                licenses {
                    license {
                        name 'The BSD License'
                        url 'http://www.opensource.org/licenses/bsd-license.php'
                    }
                }

                developers {
                    developer {
                        id 'jeffpasternack'
                        name 'Jeff Pasternack'
                    }
                }
            }
        }
    }
}
